{"version":3,"file":"static/js/680.21c1c797.chunk.js","mappings":"oMA0CA,UAlC6B,WAC3B,OAAkCA,EAAAA,EAAAA,KAA1BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAEjB,GAAsCC,EAAAA,EAAAA,WAAkB,GAAxD,eAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CACEC,UAAWF,EAAc,UAAY,GACrCG,eAAgB,kBAAMF,GAAe,EAArB,EAFlB,WAIE,UAAC,KAAD,YACE,0BACGJ,GACC,SAAC,KAAD,IAEAC,IACE,UAAC,KAAD,YACE,SAAC,KAAD,wDACA,SAAC,KAAD,+CAKR,SAAC,IAAD,CAAKM,OAAK,QAEZ,SAAC,KAAD,WACE,SAAC,IAAD,UAKT,C","sources":["pages/Onboarding/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport HowToPlay from 'components/Content/HowToPlay';\nimport Cam from 'components/Cam';\n\nimport * as S from './styles';\nimport { useAuth } from 'hooks/useAuth';\n\nconst Onboarding: React.FC = () => {\n  const { loading, invalidState } = useAuth();\n\n  const [isAnimating, setIsAnimating] = useState<boolean>(true);\n\n  return (\n    <S.Container>\n      <S.Content\n        className={isAnimating ? 'animate' : ''}\n        onAnimationEnd={() => setIsAnimating(false)}\n      >\n        <S.Aside>\n          <span>\n            {loading ? (\n              <S.Loading />\n            ) : (\n              invalidState && (\n                <S.Wrapper>\n                  <S.Title>Ocorreu um erro ao realizar o seu login.</S.Title>\n                  <S.Subtitle>Por favor, tente novamente</S.Subtitle>\n                </S.Wrapper>\n              )\n            )}\n          </span>\n          <Cam lobby />\n        </S.Aside>\n        <S.Main>\n          <HowToPlay />\n        </S.Main>\n      </S.Content>\n    </S.Container>\n  );\n};\n\nexport default Onboarding;\n"],"names":["useAuth","loading","invalidState","useState","isAnimating","setIsAnimating","className","onAnimationEnd","lobby"],"sourceRoot":""}